.text
.globl _Imain_paai
_Imain_paai: 
movq %rsp,%rbp
sub $152,%rsp
movq %rcx,-16(%rbp)
movq %rdx,-24(%rbp)
movq %rsp,-32(%rbp)
movq %rsi,-48(%rbp)
movq %rdi,-40(%rbp)
movq %r8,-56(%rbp)
movq %r9,-64(%rbp)
movq %r10,-72(%rbp)
movq %r11,-80(%rbp)
pushq %rbx
pushq %rbp
movq $88,%r12
pushq %r12
popq %r13
movq %r13,%rdi
movq $0,%rbx
bt $3,%rsp
jnc rspJmp0
movq $1,%r12
jmp rspend0
rspJmp0: 
movq $0,%r12
rspend0: 
bt $3,%rbp
jnc rbpJmp0
movq $1,%r13
jmp rbpend0
rbpJmp0: 
movq $0,%r13
rbpend0: 
test %r12,%r13
jnp extraPush0
pushq $0
movq $1,%rbx
extraPush0: 
call _I_alloc_i
cmp $1,%rbx
jne extraPop0
popq %r13
extraPop0: 
movq $0,%rbx
popq %rbp
popq %rbx
movq -80(%rbp),%r11
movq -72(%rbp),%r10
movq -64(%rbp),%r9
movq -56(%rbp),%r8
movq -40(%rbp),%rdi
movq -48(%rbp),%rsi
movq -32(%rbp),%rsp
movq -24(%rbp),%rdx
movq -16(%rbp),%rcx
pushq %rax
popq %r13
movq %r13,-88(%rbp)
movq $10,%r12
pushq %r12
movq -88(%rbp),%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $1,%r12
pushq %r12
movq -88(%rbp),%r12
pushq %r12
movq $8,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $4,%r12
pushq %r12
movq -88(%rbp),%r12
pushq %r12
movq $16,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $6,%r12
pushq %r12
movq -88(%rbp),%r12
pushq %r12
movq $24,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $8,%r12
pushq %r12
movq -88(%rbp),%r12
pushq %r12
movq $32,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $10,%r12
pushq %r12
movq -88(%rbp),%r12
pushq %r12
movq $40,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $16,%r12
pushq %r12
movq -88(%rbp),%r12
pushq %r12
movq $48,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $17,%r12
pushq %r12
movq -88(%rbp),%r12
pushq %r12
movq $56,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $18,%r12
pushq %r12
movq -88(%rbp),%r12
pushq %r12
movq $64,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $19,%r12
pushq %r12
movq -88(%rbp),%r12
pushq %r12
movq $72,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $101,%r12
pushq %r12
movq -88(%rbp),%r12
pushq %r12
movq $80,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq -88(%rbp),%r12
pushq %r12
movq $8,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
movq %r13,-96(%rbp)
movq $18,%r12
pushq %r12
popq %r13
movq %r13,-104(%rbp)
movq $0,%r12
pushq %r12
popq %r13
movq %r13,-112(%rbp)
movq %rcx,-16(%rbp)
movq %rdx,-24(%rbp)
movq %rsp,-32(%rbp)
movq %rsi,-48(%rbp)
movq %rdi,-40(%rbp)
movq %r8,-56(%rbp)
movq %r9,-64(%rbp)
movq %r10,-72(%rbp)
movq %r11,-80(%rbp)
pushq %rbx
pushq %rbp
movq $72,%r12
pushq %r12
popq %r13
movq %r13,%rdi
movq $0,%rbx
bt $3,%rsp
jnc rspJmp1
movq $1,%r12
jmp rspend1
rspJmp1: 
movq $0,%r12
rspend1: 
bt $3,%rbp
jnc rbpJmp1
movq $1,%r13
jmp rbpend1
rbpJmp1: 
movq $0,%r13
rbpend1: 
test %r12,%r13
jnp extraPush1
pushq $0
movq $1,%rbx
extraPush1: 
call _I_alloc_i
cmp $1,%rbx
jne extraPop1
popq %r13
extraPop1: 
movq $0,%rbx
popq %rbp
popq %rbx
movq -80(%rbp),%r11
movq -72(%rbp),%r10
movq -64(%rbp),%r9
movq -56(%rbp),%r8
movq -40(%rbp),%rdi
movq -48(%rbp),%rsi
movq -32(%rbp),%rsp
movq -24(%rbp),%rdx
movq -16(%rbp),%rcx
pushq %rax
popq %r13
movq %r13,-120(%rbp)
movq $8,%r12
pushq %r12
movq -120(%rbp),%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $70,%r12
pushq %r12
movq -120(%rbp),%r12
pushq %r12
movq $8,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $111,%r12
pushq %r12
movq -120(%rbp),%r12
pushq %r12
movq $16,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $117,%r12
pushq %r12
movq -120(%rbp),%r12
pushq %r12
movq $24,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $110,%r12
pushq %r12
movq -120(%rbp),%r12
pushq %r12
movq $32,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $100,%r12
pushq %r12
movq -120(%rbp),%r12
pushq %r12
movq $40,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $32,%r12
pushq %r12
movq -120(%rbp),%r12
pushq %r12
movq $48,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $98,%r12
pushq %r12
movq -120(%rbp),%r12
pushq %r12
movq $56,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq $64,%r12
pushq %r12
movq -120(%rbp),%r12
pushq %r12
movq $64,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
popq %r12
movq %r12,(%r13)
movq -120(%rbp),%r12
pushq %r12
movq $8,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
movq %r13,-112(%rbp)
movq %rcx,-16(%rbp)
movq %rdx,-24(%rbp)
movq %rsp,-32(%rbp)
movq %rsi,-48(%rbp)
movq %rdi,-40(%rbp)
movq %r8,-56(%rbp)
movq %r9,-64(%rbp)
movq %r10,-72(%rbp)
movq %r11,-80(%rbp)
pushq %rbx
pushq %rbp
movq -112(%rbp),%r12
pushq %r12
popq %r13
movq %r13,%rdi
movq $0,%rbx
bt $3,%rsp
jnc rspJmp2
movq $1,%r12
jmp rspend2
rspJmp2: 
movq $0,%r12
rspend2: 
bt $3,%rbp
jnc rbpJmp2
movq $1,%r13
jmp rbpend2
rbpJmp2: 
movq $0,%r13
rbpend2: 
test %r12,%r13
jnp extraPush2
pushq $0
movq $1,%rbx
extraPush2: 
call _Iprint_pai
cmp $1,%rbx
jne extraPop2
popq %r13
extraPop2: 
movq $0,%rbx
popq %rbp
popq %rbx
movq -80(%rbp),%r11
movq -72(%rbp),%r10
movq -64(%rbp),%r9
movq -56(%rbp),%r8
movq -40(%rbp),%rdi
movq -48(%rbp),%rsi
movq -32(%rbp),%rsp
movq -24(%rbp),%rdx
movq -16(%rbp),%rcx
pushq %rax
popq %r12
movq $0,%r12
pushq %r12
popq %r13
movq %r13,-128(%rbp)
movq $0,%r12
pushq %r12
popq %r13
movq %r13,-136(%rbp)
movq %rcx,-16(%rbp)
movq %rdx,-24(%rbp)
movq %rsp,-32(%rbp)
movq %rsi,-48(%rbp)
movq %rdi,-40(%rbp)
movq %r8,-56(%rbp)
movq %r9,-64(%rbp)
movq %r10,-72(%rbp)
movq %r11,-80(%rbp)
pushq %rbx
pushq %rbp
movq -96(%rbp),%r12
pushq %r12
movq -104(%rbp),%r12
pushq %r12
popq %r13
movq %r13,%rsi
popq %r13
movq %r13,%rdi
movq $0,%rbx
bt $3,%rsp
jnc rspJmp3
movq $1,%r12
jmp rspend3
rspJmp3: 
movq $0,%r12
rspend3: 
bt $3,%rbp
jnc rbpJmp3
movq $1,%r13
jmp rbpend3
rbpJmp3: 
movq $0,%r13
rbpend3: 
test %r12,%r13
jnp extraPush3
pushq $0
movq $1,%rbx
extraPush3: 
call _Ibinary__search_iaii
cmp $1,%rbx
jne extraPop3
popq %r13
extraPop3: 
movq $0,%rbx
popq %rbp
popq %rbx
movq -80(%rbp),%r11
movq -72(%rbp),%r10
movq -64(%rbp),%r9
movq -56(%rbp),%r8
movq -40(%rbp),%rdi
movq -48(%rbp),%rsi
movq -32(%rbp),%rsp
movq -24(%rbp),%rdx
movq -16(%rbp),%rcx
pushq %rax
popq %r13
movq %r13,-136(%rbp)
movq %rcx,-16(%rbp)
movq %rdx,-24(%rbp)
movq %rsp,-32(%rbp)
movq %rsi,-48(%rbp)
movq %rdi,-40(%rbp)
movq %r8,-56(%rbp)
movq %r9,-64(%rbp)
movq %r10,-72(%rbp)
movq %r11,-80(%rbp)
pushq %rbx
pushq %rbp
movq -136(%rbp),%r12
pushq %r12
popq %r13
movq %r13,%rdi
movq $0,%rbx
bt $3,%rsp
jnc rspJmp4
movq $1,%r12
jmp rspend4
rspJmp4: 
movq $0,%r12
rspend4: 
bt $3,%rbp
jnc rbpJmp4
movq $1,%r13
jmp rbpend4
rbpJmp4: 
movq $0,%r13
rbpend4: 
test %r12,%r13
jnp extraPush4
pushq $0
movq $1,%rbx
extraPush4: 
call _IunparseInt_aii
cmp $1,%rbx
jne extraPop4
popq %r13
extraPop4: 
movq $0,%rbx
popq %rbp
popq %rbx
movq -80(%rbp),%r11
movq -72(%rbp),%r10
movq -64(%rbp),%r9
movq -56(%rbp),%r8
movq -40(%rbp),%rdi
movq -48(%rbp),%rsi
movq -32(%rbp),%rsp
movq -24(%rbp),%rdx
movq -16(%rbp),%rcx
pushq %rax
popq %r13
movq %r13,-128(%rbp)
movq %rcx,-16(%rbp)
movq %rdx,-24(%rbp)
movq %rsp,-32(%rbp)
movq %rsi,-48(%rbp)
movq %rdi,-40(%rbp)
movq %r8,-56(%rbp)
movq %r9,-64(%rbp)
movq %r10,-72(%rbp)
movq %r11,-80(%rbp)
pushq %rbx
pushq %rbp
movq -128(%rbp),%r12
pushq %r12
popq %r13
movq %r13,%rdi
movq $0,%rbx
bt $3,%rsp
jnc rspJmp5
movq $1,%r12
jmp rspend5
rspJmp5: 
movq $0,%r12
rspend5: 
bt $3,%rbp
jnc rbpJmp5
movq $1,%r13
jmp rbpend5
rbpJmp5: 
movq $0,%r13
rbpend5: 
test %r12,%r13
jnp extraPush5
pushq $0
movq $1,%rbx
extraPush5: 
call _Iprintln_pai
cmp $1,%rbx
jne extraPop5
popq %r13
extraPop5: 
movq $0,%rbx
popq %rbp
popq %rbx
movq -80(%rbp),%r11
movq -72(%rbp),%r10
movq -64(%rbp),%r9
movq -56(%rbp),%r8
movq -40(%rbp),%rdi
movq -48(%rbp),%rsi
movq -32(%rbp),%rsp
movq -24(%rbp),%rdx
movq -16(%rbp),%rcx
pushq %rax
popq %r12
ret6: 
cmp %rbp,%rsp
je retend6
popq %r12
jmp ret6
retend6: 
ret
.globl _Ibinary__search_iaii
_Ibinary__search_iaii: 
movq %rsp,%rbp
sub $152,%rsp
movq %rdi,%r12
pushq %r12
movq $8,%r12
pushq %r12
popq %r13
popq %r12
subq %r13,%r12
pushq %r12
popq %r12
pushq (%r12)
popq %r13
movq %r13,-88(%rbp)
movq $0,%r12
pushq %r12
popq %r13
movq %r13,-96(%rbp)
movq -88(%rbp),%r12
pushq %r12
movq $1,%r12
pushq %r12
popq %r13
popq %r12
subq %r13,%r12
pushq %r12
popq %r13
movq %r13,-104(%rbp)
w_head3: 
movq -96(%rbp),%r12
pushq %r12
movq -104(%rbp),%r12
pushq %r12
popq %r13
popq %r12
cmp %r13,%r12
js _op7
movq $0,%r12
jmp _end7
_op7: 
movq $1,%r12
_end7: 
pushq %r12
popq %r12
btc $0,%r12
pushq %r12
popq %r13
movq %r13,-112(%rbp)
movq -112(%rbp),%r12
pushq %r12
popq %r12
cmp $1,%r12
je w_true4
w_false5: 
movq -96(%rbp),%r12
pushq %r12
movq -104(%rbp),%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
movq $2,%r12
pushq %r12
movq %rdx,%r14
popq %r13
popq %r12
movq %r12,%rax
cmp $0,%r12
jl div8
movq $0,%rdx
jmp divEnd8
div8:
movq $-1,%rdx
divEnd8:
idiv %r13
movq %r14,%rdx
pushq %rax
popq %r13
movq %r13,-120(%rbp)
movq -120(%rbp),%r12
pushq %r12
popq %r13
movq %r13,-128(%rbp)
movq %rdi,%r12
pushq %r12
popq %r13
movq %r13,-136(%rbp)
movq -128(%rbp),%r12
pushq %r12
movq $-1,%r12
pushq %r12
popq %r13
popq %r12
cmp %r13,%r12
jg _op9
movq $0,%r12
jmp _end9
_op9: 
movq $1,%r12
_end9: 
pushq %r12
movq -128(%rbp),%r12
pushq %r12
movq -136(%rbp),%r12
pushq %r12
movq $8,%r12
pushq %r12
popq %r13
popq %r12
subq %r13,%r12
pushq %r12
popq %r12
pushq (%r12)
popq %r13
popq %r12
cmp %r13,%r12
js _op10
movq $0,%r12
jmp _end10
_op10: 
movq $1,%r12
_end10: 
pushq %r12
popq %r13
popq %r12
and %r13,%r12
pushq %r12
popq %r12
cmp $1,%r12
je t_inBounds12
f_outOfBounds11: 
movq %rcx,-16(%rbp)
movq %rdx,-24(%rbp)
movq %rsp,-32(%rbp)
movq %rsi,-48(%rbp)
movq %rdi,-40(%rbp)
movq %r8,-56(%rbp)
movq %r9,-64(%rbp)
movq %r10,-72(%rbp)
movq %r11,-80(%rbp)
pushq %rbx
pushq %rbp
movq $0,%rbx
bt $3,%rsp
jnc rspJmp11
movq $1,%r12
jmp rspend11
rspJmp11: 
movq $0,%r12
rspend11: 
bt $3,%rbp
jnc rbpJmp11
movq $1,%r13
jmp rbpend11
rbpJmp11: 
movq $0,%r13
rbpend11: 
test %r12,%r13
jnp extraPush11
pushq $0
movq $1,%rbx
extraPush11: 
call _I_outOfBounds_p
cmp $1,%rbx
jne extraPop11
popq %r13
extraPop11: 
movq $0,%rbx
popq %rbp
popq %rbx
movq -80(%rbp),%r11
movq -72(%rbp),%r10
movq -64(%rbp),%r9
movq -56(%rbp),%r8
movq -40(%rbp),%rdi
movq -48(%rbp),%rsi
movq -32(%rbp),%rsp
movq -24(%rbp),%rdx
movq -16(%rbp),%rcx
pushq %rax
popq %r12
t_inBounds12: 
jmp b_lookup13
b_lookup13: 
movq -136(%rbp),%r12
pushq %r12
movq -128(%rbp),%r12
pushq %r12
movq $3,%r12
pushq %r12
popq %r13
popq %r12
shl $3,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r12
pushq (%r12)
movq %rsi,%r12
pushq %r12
popq %r13
popq %r12
cmp %r13,%r12
js _op12
movq $0,%r12
jmp _end12
_op12: 
movq $1,%r12
_end12: 
pushq %r12
popq %r13
movq %r13,-144(%rbp)
movq -144(%rbp),%r12
pushq %r12
popq %r12
cmp $1,%r12
je if_true6
if_false7: 
movq -120(%rbp),%r12
pushq %r12
popq %r13
movq %r13,-104(%rbp)
jmp if_end8
if_true6: 
movq -120(%rbp),%r12
pushq %r12
movq $1,%r12
pushq %r12
popq %r13
popq %r12
add %r13,%r12
pushq %r12
popq %r13
movq %r13,-96(%rbp)
jmp if_end8
if_end8: 
jmp w_head3
w_true4: 
movq -96(%rbp),%r12
pushq %r12
popq %rax
ret13: 
cmp %rbp,%rsp
je retend13
popq %r12
jmp ret13
retend13: 
ret
.text

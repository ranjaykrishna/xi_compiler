use test2

xiAnd (a:bool, b:bool) : bool {
	c: bool
	c = a & b
	return c
}

xiOr (a:bool, b:bool) : bool {
	c: bool
	c = a | b
	myProcedure(3)
	return c
}

myProcedure(x:int) {
	x = 5
}

twoRet() : int, bool {
	return 1,true
}

foo() {
a:int, b:bool = twoRet()
}

goo() : int {
a:int
b:bool
a, b = twoRet()
return 1
}

hoo() :int {
	booboo:int[] = (3, 4+1, 6*2)
	return 4 + -(1 + 3)
}

joo() : int {
a:int = 2
b:int = -(a+2)
return (a+b)
}

koo(c:bool) : bool {
	a:bool = false | c
	b:bool = true & c
	return !(a | b)
}
